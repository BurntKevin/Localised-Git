#!/bin/dash

new_items() {
    # Checking if the previous commit is a directory and still exists
    if test -d .shrug/branches/$current_branch/$previous_commit_id
    then
        # Checking if there is a new file in index
        # Testing if the directory contains items
        if [ $(ls .shrug/branches/$current_branch/index | wc -l) != 0 ]
        then
            # There are files to loop through
            for new_file in .shrug/branches/$current_branch/index/*
            do
                # Getting name of current file
                file=`echo $new_file | cut -d"/" -f5`

                # Checking if files exists
                if test -e .shrug/branches/$current_branch/$previous_commit_id/saved/$file
                then
                    # File exists, checking if there is a difference
                    if [ $(diff $new_file .shrug/branches/$current_branch/$previous_commit_id/saved/$file | wc -l ) != 0 ]
                    then
                        # There is a changed file
                        return 1
                    fi
                else
                    # A file got removed
                    return 1
                fi
            done
        fi

        # Checking if there is a newly deleted file
        if [ $(ls .shrug/branches/$current_branch/$previous_commit_id/saved | wc -l) != 0 ]
        then
            # There are files in the directory
            for new_file in .shrug/branches/$current_branch/$previous_commit_id/saved/*
            do
                # Getting name of current file
                file=`echo $new_file | cut -d"/" -f6`

                # Checking if file exists
                if ! test -e .shrug/branches/$current_branch/index/$file
                then
                    # File got removed, there is a difference
                    return 1
                fi
            done
        fi

        # Could not find a difference
        return 0
    else
        # Directory does not exist
        return 1
    fi
}

# Obtaining current branch
current_branch=`cat .shrug/current_branch`

# Getting next commit id
next_commit_id=`cat .shrug/commit_number`

# Getting previous commit id
previous_commit_id=`ls .shrug/branches/$current_branch | sort -n | tail -1`
if [ $previous_commit_id = "index" ] || [ $previous_commit_id = "stash" ]
then
    previous_commit_id=0
fi

# Checking if it is a new commit or not
if [ $1 = "-a" ]
then
    # Requires committing all items
    # Checking if the directory has items
    if [ $(ls | wc -l ) != 0 ]
    then
        # Iterating through all files
        for file in *
        do
            sh shrug-add $file
        done
    fi

    # Obtaining message
    message=$3
else
    # Obtaining message
    message=$2
fi

# # Checking if there are items to commit
new_items
if [ $? -eq "1" ]
then
    # Creating latest commit folder
    mkdir .shrug/branches/$current_branch/$next_commit_id

    # Saving files
    mkdir .shrug/branches/$current_branch/$next_commit_id/saved

    # Checking if the directory is empty
    if [ $(ls .shrug/branches/$current_branch/index | wc -l) != 0 ]
    then
        # Iterating through all files
        for line in $(ls .shrug/branches/$current_branch/index)
        do
            cp .shrug/branches/$current_branch/index/$line .shrug/branches/$current_branch/$next_commit_id/saved/$line
        done
    fi

    # Adding commit message
    echo $message > .shrug/branches/$current_branch/$next_commit_id/message.txt

    # Updating commit number
    echo $((next_commit_id + 1)) > .shrug/commit_number

    # Notifying user of completed commit
    echo Committed as commit $next_commit_id
else
    # Notifying user of issue
    echo nothing to commit
fi
